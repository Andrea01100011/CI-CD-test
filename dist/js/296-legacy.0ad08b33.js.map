{"version":3,"file":"js/296-legacy.0ad08b33.js","mappings":"6JAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,cAAc,CAACG,MAAM,CAAC,MAAQ,QAAQH,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,MAAM,CAACE,YAAY,KAAK,CAACF,EAAG,IAAI,CAACG,MAAM,CAAC,KAAO,MAAM,CAACH,EAAG,MAAM,CAACG,MAAM,CAAC,IAAMP,EAAIQ,QAAUR,EAAIS,KAAKC,aAAa,IAAM,UAAUN,EAAG,MAAM,CAACE,YAAY,MAAM,CAACF,EAAG,IAAI,CAACG,MAAM,CAAC,KAAO,MAAM,CAACP,EAAIW,GAAGX,EAAIY,GAAGZ,EAAIS,KAAKI,aAAaT,EAAG,IAAI,CAACJ,EAAIW,GAAGX,EAAIY,GAAGZ,EAAIc,OAAOd,EAAIS,KAAKM,WAAWC,OAAO,+BAA+BZ,EAAG,MAAM,CAACE,YAAY,MAAM,CAACF,EAAG,IAAI,CAACJ,EAAIW,GAAGX,EAAIY,GAAGZ,EAAIS,KAAKQ,iBAAiBb,EAAG,MAAM,CAACE,YAAY,KAAKN,EAAIkB,GAAIlB,EAAIS,KAAY,SAAE,SAASU,EAAIC,GAAI,OAAOhB,EAAG,MAAM,CAACiB,IAAID,EAAGb,MAAM,CAAC,IAAM,WAAaY,EAAI,IAAM,SAAQ,IAAI,IACjuBG,EAAkB,G,8DCgCtB,GACAC,WAAAA,CAAAC,WAAAA,EAAAA,GACAC,UAAAA,EAAAA,EAAAA,GAAAA,IACAC,EAAAA,EAAAA,IAAAA,CAAAA,aAEAjB,KALA,WAMA,OACAA,KAAAA,KAIAkB,QAXA,WAYA,gBAEAC,QAAAA,CACAC,QADA,WACA,WACA,EACA,0CACA,oCACA,mCAEA,OADAC,EAAAA,QAAAA,EAAAA,QAAAA,MAAAA,KACA,KAEAC,QAAAA,IAAAA,EAAAA,QACA,aACA,YACAA,QAAAA,IAAAA,EAAAA,aC3DoQ,I,UCQhQC,GAAY,OACd,EACAjC,EACAuB,GACA,EACA,KACA,WACA,MAIF,EAAeU,EAAiB","sources":["webpack://food-pro/./src/views/NoteList.vue?a416","webpack://food-pro/src/views/NoteList.vue","webpack://food-pro/./src/views/NoteList.vue?83f7","webpack://food-pro/./src/views/NoteList.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"note-list\"},[_c('health-head',{attrs:{\"title\":\"笔记\"}}),_c('div',{staticClass:\"n-top\"},[_c('div',{staticClass:\"u\"},[_c('a',{attrs:{\"href\":\"#\"}},[_c('img',{attrs:{\"src\":_vm.imgBase + _vm.data.avatar_image,\"alt\":\"\"}})])]),_c('div',{staticClass:\"us\"},[_c('a',{attrs:{\"href\":\"#\"}},[_vm._v(_vm._s(_vm.data.username))]),_c('p',[_vm._v(_vm._s(_vm.moment(_vm.data.shar_time).format(\"YYYY-MM-DD HH:mm:ss\")))])])]),_c('div',{staticClass:\"pp\"},[_c('p',[_vm._v(_vm._s(_vm.data.shar_title))])]),_c('div',{staticClass:\"m\"},_vm._l((_vm.data.big_img),function(img,id){return _c('img',{key:id,attrs:{\"src\":'/images/' + img,\"alt\":\"\"}})}),0)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"note-list\">\r\n    <health-head title=\"笔记\" />\r\n    <div class=\"n-top\">\r\n      <div class=\"u\">\r\n        <a href=\"#\">\r\n          <img :src=\"imgBase + data.avatar_image\" alt=\"\" />\r\n        </a>\r\n      </div>\r\n\r\n      <div class=\"us\">\r\n        <a href=\"#\">{{ data.username }}</a>\r\n        <p>{{ moment(data.shar_time).format(\"YYYY-MM-DD HH:mm:ss\") }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"pp\">\r\n      <p>{{ data.shar_title }}</p>\r\n    </div>\r\n\r\n    <div class=\"m\">\r\n      <img\r\n        v-for=\"(img, id) in data.big_img\"\r\n        :src=\"'/images/' + img\"\r\n        :key=\"id\"\r\n        alt=\"\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HealthHead from \"@/components/HealthHead.vue\"\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  components: { HealthHead },\r\n  computed: {\r\n   ...mapState([\"imgBase\"])\r\n  },\r\n  data() {\r\n    return {\r\n      data: {},\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.getData()\r\n  },\r\n  methods: {\r\n    getData() {\r\n      const url =\r\n        \"/shar/notelist?id=\" + this.$route.query.id\r\n      this.axios.get(url).then(res => {\r\n        let arr = res.data.data.map(e => {\r\n          e.big_img = e.big_img.split(\",\")\r\n          return e\r\n        })\r\n        console.log(arr.length)\r\n        if (arr.length > 0) {\r\n          this.data = arr[0]\r\n          console.log(this.data)\r\n        }\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.note-list {\r\n  width: 1000px;\r\n  margin: 0 auto;\r\n  a {\r\n    text-decoration: none;\r\n    color: #000;\r\n  }\r\n  .n-top {\r\n    display: flex;\r\n    margin-top: 15px;\r\n\r\n    img {\r\n      display: inline-block;\r\n      width: 40px;\r\n      height: 40px;\r\n      border-radius: 50%;\r\n      border-radius: 50%;\r\n      margin: 10px 0 0 0;\r\n    }\r\n    .us {\r\n      padding: 10px;\r\n\r\n      a {\r\n        font-size: 14px;\r\n      }\r\n      p {\r\n        font-size: 10px;\r\n        color: #666;\r\n      }\r\n    }\r\n  }\r\n  .pp {\r\n    font-size: 16px;\r\n    font-weight: 800;\r\n    margin: 15px 47px;\r\n  }\r\n  .m {\r\n    margin: 10px 40px;\r\n    // width: 580px;\r\n    img {\r\n      display: inline-block;\r\n      // width: 100%;\r\n      // height: 344px;\r\n      margin: 10px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NoteList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NoteList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NoteList.vue?vue&type=template&id=5e3ba7b0&scoped=true&\"\nimport script from \"./NoteList.vue?vue&type=script&lang=js&\"\nexport * from \"./NoteList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NoteList.vue?vue&type=style&index=0&id=5e3ba7b0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5e3ba7b0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","imgBase","data","avatar_image","_v","_s","username","moment","shar_time","format","shar_title","_l","img","id","key","staticRenderFns","components","HealthHead","computed","mapState","mounted","methods","getData","e","console","component"],"sourceRoot":""}